[tox]
requires =
  tox>=4
isolated_build = true
env_list = lint, py312

[testenv]
skip_install = true
description = run unit tests
allowlist_externals =
  poetry
  docker
setenv =
  ENVIRONMENT=DEV
passenv = *
commands_pre =
  poetry install --no-root --sync
commands =
  {[base]commands}
  poetry run pytest --reuse-db --verbose {env:_EXTRAS} {env:PYTEST_ADOPTS:} {posargs}

[testenv:lint]
description = run linters
skip_install = true
commands =
  poetry run black {posargs:.}
  poetry run isort {posargs:.}
  poetry run flake8 {posargs:.}

[base]
commands =
  docker compose -f docker-compose-dev.yml up --build -d
commands_post =
  docker compose -f docker-compose-dev.yml down
  
[testenv:start_db]
description = run local db
skip_install = true
commands =
  {[base]commands}
  
[testenv:stop_db]
description = stop local db
skip_install = true
commands =
  {[base]commands_post}

[testenv:start_backend]
description = run local backend
skip_install = true
commands =
  poetry run python manage.py runserver 0.0.0.0:8000

[testenv:start_frontend]
description = run local frontend
skip_install = true
commands =
  poetry run python manage.py tailwind start

[testenv:migrate]
description = apply migration to local stack
skip_install = true
commands =
  {[base]commands}
  poetry run python manage.py migrate

[testenv:makemigrations]
description = make migrations for local stack
skip_install = true
commands =
  {[base]commands}
  poetry run python manage.py makemigrations {posargs}

